name: Infrastructure Deployment Pipeline

on:
  push:
    branches:
      - master
    paths:
      - 'terraform/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  security-events: write

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Azure CLI Login
      uses: azure/login@v2
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: latest

    - name: Setup Python for Checkov
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install Checkov
      run: pip install checkov

    - name: Copy Terraform Resources
      working-directory: ./terraform/project
      run: cp ../tf_resources/* .

    - name: Terraform Init and Validate
      working-directory: ./terraform/project
      run: |
        export ARM_SUBSCRIPTION_ID=${{ vars.AZURE_SUBSCRIPTION_ID }}
        terraform init
        terraform validate

    - name: Run Checkov Security Scan
      working-directory: ./terraform/project
      run: |
        echo "Running Checkov security scan..."
        checkov -d . \
          --framework terraform \
          --output sarif \
          --output-file-path checkov-report \
          --quiet \
          --compact \
          --skip-check CKV_AZURE_4,CKV_AZURE_35,CKV_AZURE_33 > /dev/null 2>&1 \
          --soft-fail
        
        if [ -f "checkov-report/results_sarif.sarif" ]; then
          echo "Checkov scan completed successfully"
          echo "SARIF report generated for GitHub Security tab"
        else
          echo "Checkov scan completed with issues (check Security tab for details)"
        fi
      continue-on-error: true

    - name: Upload Checkov SARIF Results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: ./terraform/project/checkov-report/results_sarif.sarif
        category: checkov-terraform

    - name: Terraform Plan
      working-directory: ./terraform/project
      run: |
        export ARM_SUBSCRIPTION_ID=${{ vars.AZURE_SUBSCRIPTION_ID }}
        terraform plan -out=tfplan

    - name: Terraform Apply
      working-directory: ./terraform/project
      run: |
        export ARM_SUBSCRIPTION_ID=${{ vars.AZURE_SUBSCRIPTION_ID }}
        terraform apply -auto-approve tfplan